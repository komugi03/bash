#!/bin/bash
# 
# 形式: count-line-numbers 任意の個数のファイルパス
# 
# 概要: 指定されたファイルパスごとに、「ファイルパス: 行数」の行を出力する。
# 
# パラメータ: 
# 　任意の個数のファイルパス
# 
# リターンコード: 
# 　正常終了時: 0
# 　ファイル読み込み失敗: 1
# 

# --- 定数定義 ---

# リターンコード: 正常終了時
declare -ri RC_SUCCESS=0
# リターンコード: ファイル読み込み失敗
declare -ri RC_NOT_EXIST_FILE=1


# --- 関数定義 ---

# エラーを出力して終了する
# $1: エラーメッセージ
function error() {
    local -r message=$1
    echo "${message}" >&2
}

# ファイルが存在しているかどうかを判定し、
# 存在していなかったらエラー文を標準エラー出力に出力する。
# $1: 判定するファイルパス
function is_exist() {
    local file_name=$1
    [ -e "${file_name}" ]
}

# 指定されたファイルパスの行数をカウントして呼び出し元に返す。
# $1: 指定ファイルパス
function count_line_numbers() {
    local file_name=$1
    < "${file_name}" grep -c ''
}

# --- 主処理 ---

declare i
declare file_name_parameter
declare result_count_line_numbers

for i in $(seq $#)
do
    
    file_name_parameter=$(eval echo '$'"${i}")

    if is_exist "${file_name_parameter}"; then
        result_count_line_numbers="$(count_line_numbers "${file_name_parameter}")"
    else
        error "エラー: ファイル $file_name_parameter の処理中にエラーが発生しました。"
        exit ${RC_NOT_EXIST_FILE}
    fi
    echo "${file_name_parameter}": "${result_count_line_numbers}"
done

exit ${RC_SUCCESS}